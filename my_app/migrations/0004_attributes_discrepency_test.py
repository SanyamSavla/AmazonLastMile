# Generated by Django 5.0.3 on 2024-04-25 00:12

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('my_app', '0003_attribute_auditor_auditsession_finalauditattribute_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_site_code', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('msa', models.CharField(blank=True, max_length=255, null=True)),
                ('design_type', models.CharField(blank=True, max_length=255, null=True)),
                ('mhe_type', models.CharField(blank=True, max_length=255, null=True)),
                ('locationstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('building_footprint', models.CharField(blank=True, max_length=255, null=True)),
                ('office_support_area_size', models.CharField(blank=True, max_length=255, null=True)),
                ('plot_size_field', models.CharField(blank=True, db_column='plot_size_', max_length=255, null=True)),
                ('usable_acreage_field', models.CharField(blank=True, db_column='usable_acreage_', max_length=255, null=True)),
                ('package_inbound_truck_type', models.CharField(blank=True, max_length=255, null=True)),
                ('package_unload_medium', models.CharField(blank=True, max_length=255, null=True)),
                ('induct_mechanism', models.CharField(blank=True, max_length=255, null=True)),
                ('design_labor_ratio', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_zones_per_row', models.CharField(blank=True, max_length=255, null=True)),
                ('wavesfordispatchstaging', models.CharField(blank=True, max_length=255, null=True)),
                ('pickcartsperroute', models.CharField(blank=True, max_length=255, null=True)),
                ('loadingtype', models.CharField(blank=True, max_length=255, null=True)),
                ('loadingside', models.CharField(blank=True, max_length=255, null=True)),
                ('loadoutdooratgrade', models.CharField(blank=True, max_length=255, null=True)),
                ('demisingwallinpickstagearea', models.CharField(blank=True, max_length=255, null=True)),
                ('canopyoverlaunchpads', models.CharField(blank=True, max_length=255, null=True)),
                ('vanparkingconfigurationonsite', models.CharField(blank=True, max_length=255, null=True)),
                ('designfph', models.CharField(blank=True, max_length=255, null=True)),
                ('systemfph', models.CharField(blank=True, max_length=255, null=True)),
                ('designpeakspr', models.CharField(blank=True, max_length=255, null=True)),
                ('designpeakspr_co', models.CharField(blank=True, max_length=255, null=True)),
                ('totalhconsite', models.CharField(blank=True, max_length=255, null=True)),
                ('dockdoorsinbound', models.CharField(blank=True, max_length=255, null=True)),
                ('dockdoorsgocartreturn', models.CharField(blank=True, max_length=255, null=True)),
                ('dockdoorspalletremoval', models.CharField(blank=True, max_length=255, null=True)),
                ('manualfingers', models.CharField(blank=True, max_length=255, null=True)),
                ('adtafingers', models.CharField(blank=True, max_length=255, null=True)),
                ('induct_stations_asl', models.CharField(blank=True, max_length=255, null=True)),
                ('inductstations_manual', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_launchpads', models.CharField(blank=True, max_length=255, null=True)),
                ('loading_spots', models.CharField(blank=True, max_length=255, null=True)),
                ('queueing_spots', models.CharField(blank=True, max_length=255, null=True)),
                ('loading_spots_for_parking', models.CharField(blank=True, max_length=255, null=True)),
                ('queuing_spots_for_parking', models.CharField(blank=True, max_length=255, null=True)),
                ('associate_parking_ratio', models.CharField(blank=True, max_length=255, null=True)),
                ('pick_cart_staging', models.CharField(blank=True, max_length=255, null=True)),
                ('inbound_staging', models.CharField(blank=True, max_length=255, null=True)),
                ('inbound_staging_d', models.CharField(blank=True, max_length=255, null=True)),
                ('total_van_parking_designed', models.CharField(blank=True, max_length=255, null=True)),
                ('total_personal_parking_designed', models.CharField(blank=True, max_length=255, null=True)),
                ('bts_template', models.CharField(blank=True, max_length=255, null=True)),
                ('drs_version', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'attributes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Discrepency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audit_date', models.DateTimeField()),
                ('auditor_name', models.CharField(max_length=100)),
                ('discrepancy', models.JSONField()),
            ],
            options={
                'db_table': 'Discrepancy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('attribute_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'test',
                'managed': False,
            },
        ),
    ]
